---
title: "School Segregation Ecological Analysis"
author: 
  - Mateo Frumholtz
date: "`r Sys.Date()`"
format:
  html:
    embed-resources: true
    cap-location: bottom
toc: true
execute:
  warning: false
  error: false
---


```{r prep}
#| echo: false
#| include: false

rm(list = ls())

# Install Needed Packages -------------------------------------------------

library(tidyverse)
library(readxl)
library(summarytools)
library(plotly)
library(ggtext)
library(gt)
library(gtExtras)
library(segregation)
library(Hmisc)
library(ggExtra)
library(reshape2)

# Metro Prep ----------------------------------------------------------
# Metro districts were compiled from the list of metro school districts in the 2021 MDE Public Enrollment File (called FY2021 MDE Enrollment)
metro.districts2 <- c("Anoka-Hennepin School District",           
                      "Anoka-Hennepin Public School District", # Not present after normalized
                      "Belle Plaine Public School District",      
                      "Bloomington Public School District",      
                      "Brooklyn Center School District",          
                      "Buffalo-Hanover-Montrose Public Schools", # Not present after normalized
                      "Buffalo-Hanover-Montrose Schools",         
                      "Burnsville", # Not present after normalized                              
                      "Burnsville Public School District", # Not present after normalized        
                      "Burnsville-Eagan-Savage Schools",         
                      "Centennial Public School District",        
                      "Central Public School District", # Not present after normalized          
                      "Chisago Lakes School District",            
                      "Columbia Heights Public School District", 
                      "Delano Public School District",            
                      "Eastern Carver County Public School",     
                      "Eden Prairie", # Not present after normalized                             
                      "Eden Prairie Public School District",     
                      "Edina Public School District",                                    
                      "Elk River Public School District",                               
                      "Farmington Public School District",        
                      "Forest Lake Public School District",      
                      "Fridley Public School District",           
                      "Hastings Public School District",         
                      "Hopkins Public School District",           
                      "Inver Grove Heights Schools",             
                      "Jordan Public School District",            
                      "Lakeville Area Schools",                  
                      "Lakeville Public School District", # Not present after normalized         
                      "Le Sueur-Henderson School District",      
                      "Mahtomedi Public School District",         
                      "Minneapolis Public School District",      
                      "Minnetonka Public School District",        
                      "Mounds View Public School District",      
                      "New Prague Area Schools",                  
                      "North St. Paul-Maplewood Oakdale",
                      "Northfield Public School District",        
                      "Orono Public School District",            
                      "Osseo Public School District",             
                      "Prior Lake-Savage Area Schools",          
                      "Randolph Public School District",          
                      "Richfield Public School District",        
                      "Robbinsdale Public School District",       
                      "Rockford Public School District",         
                      "Rosemount-Apple Valley-Eagan",             
                      "Roseville Public School District",  
                      "Saint Paul Public Schools",
                      "Shakopee Public School District",          
                      "South St. Paul Public School District",   
                      "South Washington County Schools",          
                      "Spring Lake Park Public Schools",         
                      "St. Anthony-New Brighton Schools",         
                      "St. Francis Area Schools",                
                      "St. Louis Park Public School District",    
                      "St. Michael-Albertville Schools",         
                      "St. Paul Public School District", # Not present after normalized          
                      "Stillwater Area Public Schools",          
                      "Waconia Public School District",           
                      "Watertown-Mayer Public School District",  
                      "Wayzata Public School District",           
                      "West St. Paul-Mendota Heights-Eagan",     
                      "Westonka Public School District",          
                      "White Bear Lake School District")

# Import Datasets ---------------------------------------------------------
df <- read_excel("/Users/mateofrumholtz/Dropbox/R Base/Projects/School Segregation/Data/MN_Stanford_NCES_data 91-22.xlsx", sheet = "LISDdata")
# Creating a list of the metro district ID's by matching the district names so we can filter and match district segregation data to school closures
metro.leaid <- df %>% 
  filter(leaname %in% metro.districts2) %>% 
  select(leaid) %>% 
  unique() %>% 
  pull(leaid)
# Correct for missing school levels
school.levels <- df %>% 
  group_by(schoolname, leaname, level) %>% 
  summarise(tot= n()) %>% 
  arrange(schoolname, desc(tot)) %>% 
  slice_head() %>% 
  select(-tot)
# Correct for changing district names by choosing the most recent district name
# We are doing two things: the first is choosing the most recent names for every district id
# the second is using the district name that appears the most times for each id that uses multiple names
# across NCES in a year. For ex. Blue Earth uses two different names in 1996 with the same id. This code chooses whichever
# has the most instances or the one that comes first alphabetically in the case that they have the same count. This should correct around 7% of district names.
distr.names <- df %>% 
  select(leaname, leaid, year) %>% 
  group_by(leaid) %>% 
  mutate(yr = max(year)) %>% 
  filter(year==yr) %>% 
  group_by(leaid, leaname) %>% 
  summarise(n = n()) %>% 
  group_by(leaid) %>% 
  arrange(leaid, desc(n)) %>% 
  slice_head() %>% 
  select(-n) %>% 
  rename(yr_leaname = "leaname")

# Creating clean school data with normalized school levels and district names
schools <- df %>% 
  # This chunk of code just completes the levels because NCES only collected levels after the 2000's
  left_join(school.levels, by = c("schoolname", "leaname"), suffix = c("", ".df1")) %>%
  select(-level) %>% 
  rename(level = "level.df1") %>% 
  left_join(distr.names, by = "leaid") %>% 
  select(-leaname) %>% 
  rename(leaname = "yr_leaname")
rm(df)

# Bringing in ecologial dataset and administrative school segregation data
ecol <- read.csv("/Users/mateofrumholtz/Dropbox/R Base/Projects/School Segregation/Data/Merged Ecological Dataset.csv")
admin <- read_excel("/Users/mateofrumholtz/Dropbox/R Base/Projects/School Segregation/Data/Stanford National Segregation Admin District 1991-2022.xlsx")
mdex <- read_excel("/Users/mateofrumholtz/Dropbox/R Base/Projects/School Segregation/Data/NCES_MDE_lookup.xlsx") %>% 
  select(ncessch = "NCESID", DTSCHID = "DTSCHIDb")



```


```{r functions_prep}
#| echo: false

# Functions for correlation plots
# Get upper triangle of the correlation matrix
get_upper_tri <- function(cormat){
  cormat[lower.tri(cormat)]<- NA
  return(cormat)
}

reorder_cormat <- function(cormat){
  # Use correlation between variables as distance
  dd <- as.dist((1-cormat)/2)
  hc <- hclust(dd)
  cormat <-cormat[hc$order, hc$order]
}

# Function for combining correlations over time in elementary schools
elem_corrs_fun <- function(data, years) {
  # Initialize a list to store results
  cor_matrices <- list()
  
  # Loop over each year
  for (year in years) {
    # Filter the data for the current year
    yearly_data <- data %>%
      filter(year == !!year)
    
    # Apply different column selections and renaming depending on the year 
    if (year < 2006) {
      yearly_data <- yearly_data %>%
        select(-year, -perc_nograd, -perc_nt, -perc_exp15) %>%
        rename(
          "p_b" = "perblack",
          "p_h" = "perhisp",
          "p_wh" = "perwhite",
          "p_frl" = "perfrlunch",
          "wb_nei" = "ns_wht_blk",
          "p_me_m3" = "m3_perc_me",
          "p_me_r3" = "r3_perc_me"
        )
    } else if (year == 2019) {  # Special case for year 2019 since there was no MCA due to COVID-19
      yearly_data <- yearly_data %>%
        select(-year, -m3_perc_me, -r3_perc_me) %>%  
        rename(
          "p_b" = "perblack",
          "p_h" = "perhisp",
          "p_wh" = "perwhite",
          "p_frl" = "perfrlunch",
          "wb_nei" = "ns_wht_blk",
          "p_nt" = "perc_nt",
          "p_nogr" = "perc_nograd",
          "p_exp15" = "perc_exp15"
        )
    } else {  # For years after 2006 except 2019
      yearly_data <- yearly_data %>%
        select(-year) %>%
        rename(
          "p_b" = "perblack",
          "p_h" = "perhisp",
          "p_wh" = "perwhite",
          "p_frl" = "perfrlunch",
          "wb_nei" = "ns_wht_blk",
          "p_nt" = "perc_nt",
          "p_nogr" = "perc_nograd",
          "p_me_m3" = "m3_perc_me",
          "p_me_r3" = "r3_perc_me",
          "p_exp15" = "perc_exp15"
        )
    }
    
    # Continue with the renaming and correlation steps
    cor_matrix <- yearly_data %>%
      cor(use = "complete.obs") %>% 
      reorder_cormat() %>% 
      melt() %>% 
      mutate(year = year)
    
    cor_matrix_df <- as.data.frame(cor_matrix)
    
    # Store the correlation matrix in the list
    cor_matrices[[as.character(year)]] <- cor_matrix_df
  }
  
  # Combine all correlation matrices into one data frame or list
  combined_data <- do.call(rbind, cor_matrices)
  
  # Return the combined dataset
  return(combined_data)
}

# Function for combining correlations over time in middle schools
middl_corrs_fun <- function(data, years) {
  # Initialize a list to store results
  cor_matrices <- list()
  
  # Loop over each year
  for (year in years) {
    # Filter the data for the current year
    yearly_data <- data %>%
      filter(year == !!year)
    
    # Apply different column selections and renaming depending on the year 
    if (year < 2003) {
      yearly_data <- yearly_data %>%
        select(-year, -perc_nograd, -perc_nt, -perc_exp15, -m7_perc_me, -r7_perc_me) %>%
        rename(
          "p_b" = "perblack",
          "p_h" = "perhisp",
          "p_wh" = "perwhite",
          "p_frl" = "perfrlunch",
          "wb_nei" = "ns_wht_blk"
        )
    } else if (year %in% c(2003:2005)) { 
      yearly_data <- yearly_data %>%
        select(-year, -perc_nograd, -perc_nt, -perc_exp15) %>%  
        rename(
          "p_b" = "perblack",
          "p_h" = "perhisp",
          "p_wh" = "perwhite",
          "p_frl" = "perfrlunch",
          "wb_nei" = "ns_wht_blk",
          "p_me_m7" = "m7_perc_me",
          "p_me_r7" = "r7_perc_me"
        )
    } else if (year == 2019) {  # Special case for year 2019 since there was no MCA due to COVID-19
      yearly_data <- yearly_data %>%
        select(-year, -m7_perc_me, -r7_perc_me) %>%  
        rename(
          "p_b" = "perblack",
          "p_h" = "perhisp",
          "p_wh" = "perwhite",
          "p_frl" = "perfrlunch",
          "wb_nei" = "ns_wht_blk",
          "p_nt" = "perc_nt",
          "p_nogr" = "perc_nograd",
          "p_exp15" = "perc_exp15"
        )
    } else {  # For years 2005 except 2019
      yearly_data <- yearly_data %>%
        select(-year) %>%
        rename(
          "p_b" = "perblack",
          "p_h" = "perhisp",
          "p_wh" = "perwhite",
          "p_frl" = "perfrlunch",
          "wb_nei" = "ns_wht_blk",
          "p_nt" = "perc_nt",
          "p_nogr" = "perc_nograd",
          "p_me_m7" = "m7_perc_me",
          "p_me_r7" = "r7_perc_me",
          "p_exp15" = "perc_exp15"
        )
    }
    
    # Continue with the renaming and correlation steps
    cor_matrix <- yearly_data %>%
      cor(use = "complete.obs") %>% 
      reorder_cormat() %>% 
      melt() %>% 
      mutate(year = year)
    
    cor_matrix_df <- as.data.frame(cor_matrix)
    
    # Store the correlation matrix in the list
    cor_matrices[[as.character(year)]] <- cor_matrix_df
  }
  
  # Combine all correlation matrices into one data frame or list
  combined_data <- do.call(rbind, cor_matrices)
  
  # Return the combined dataset
  return(combined_data)
}


# Function for combining correlations over time in high schools
high_corrs_fun <- function(data, years) {
  # Initialize a list to store results
  cor_matrices <- list()
  
  # Loop over each year
  for (year in years) {
    # Filter the data for the current year
    yearly_data <- data %>%
      filter(year == !!year)
    
    # Apply different column selections and renaming depending on the year 
    if (year < 2003) {
      yearly_data <- yearly_data %>%
        select(-year, -perc_nograd, -perc_nt, -perc_exp15, -m11_perc_me, -r10_perc_me, -perc_four_grad, -perc_four_drop) %>%
        rename(
          "p_b" = "perblack",
          "p_h" = "perhisp",
          "p_wh" = "perwhite",
          "p_frl" = "perfrlunch",
          "wb_nei" = "ns_wht_blk"
        )
    } else if (year %in% c(2003:2005)) { 
      yearly_data <- yearly_data %>%
        select(-year, -perc_nograd, -perc_nt, -perc_exp15, -perc_four_grad, -perc_four_drop) %>%  
        rename(
          "p_b" = "perblack",
          "p_h" = "perhisp",
          "p_wh" = "perwhite",
          "p_frl" = "perfrlunch",
          "wb_nei" = "ns_wht_blk",
          "p_me_m11" = "m11_perc_me",
          "p_me_r10" = "r10_perc_me"
        )
    } else if (year %in% c(2006:2010)) { 
      yearly_data <- yearly_data %>%
        select(-year, -perc_four_grad, -perc_four_drop) %>%  
        rename(
          "p_b" = "perblack",
          "p_h" = "perhisp",
          "p_wh" = "perwhite",
          "p_frl" = "perfrlunch",
          "wb_nei" = "ns_wht_blk",
          "p_nt" = "perc_nt",
          "p_nogr" = "perc_nograd",
          "p_exp15" = "perc_exp15",
          "p_me_m11" = "m11_perc_me",
          "p_me_r10" = "r10_perc_me"
        )
    } else if (year == 2019) {  # Special case for year 2019 since there was no MCA due to COVID-19
      yearly_data <- yearly_data %>%
        select(-year, -m11_perc_me, -r10_perc_me) %>%  
        rename(
          "p_b" = "perblack",
          "p_h" = "perhisp",
          "p_wh" = "perwhite",
          "p_frl" = "perfrlunch",
          "wb_nei" = "ns_wht_blk",
          "p_nt" = "perc_nt",
          "p_nogr" = "perc_nograd",
          "p_exp15" = "perc_exp15"
        )
    } else {  # For years 2005 except 2019
      yearly_data <- yearly_data %>%
        select(-year) %>%
        rename(
          "p_b" = "perblack",
          "p_h" = "perhisp",
          "p_wh" = "perwhite",
          "p_frl" = "perfrlunch",
          "wb_nei" = "ns_wht_blk",
          "p_nt" = "perc_nt",
          "p_nogr" = "perc_nograd",
          "p_me_m11" = "m11_perc_me",
          "p_me_r10" = "r10_perc_me",
          "p_exp15" = "perc_exp15"
        )
    }
    
    # Continue with the renaming and correlation steps
    cor_matrix <- yearly_data %>%
      cor(use = "complete.obs") %>% 
      reorder_cormat() %>% 
      melt() %>% 
      mutate(year = year)
    
    cor_matrix_df <- as.data.frame(cor_matrix)
    
    # Store the correlation matrix in the list
    cor_matrices[[as.character(year)]] <- cor_matrix_df
  }
  
  # Combine all correlation matrices into one data frame or list
  combined_data <- do.call(rbind, cor_matrices)
  
  # Return the combined dataset
  return(combined_data)
}

```


:::{.callout-note}
## Segregation Metrics
Unless otherwise noted, the segregation metric used across most of these analysis is the Normalized Exposure Index. Refer to the School Segregation Index Descriptive Report tab for more information on the various indices. 
:::


```{r ecol_prep}
#| echo: false

# An explanation for this chunk of code:
# The ecological dataset is pretty messy and includes a lot of duplicate entries. I am thus taking the variables I need from that dataset, creating the metrics of interest, and then left joining them to the standard school NCES dataset we know is a complete account of schools over time. 

# Creating dataset with techer level metrics from ecological dataset
pelsb <- ecol %>% 
  # Selecting and renaming variables
  select(
    DTSCHID, leaid, year,
    teach_member = "TotalFTE", 
    teach_asian_female = "AsianFemale", teach_asian_male = "AsianMale", teach_asian_und = "AsianUndeclared",
    teach_nam_female = "AmericanIndianFemale", teach_nam_male = "AmericanIndianMale", teach_name_und = "AmericanIndianUndeclared",
    teach_hisp_female = "HispanicFemale", teach_hisp_male = "HispanicMale", teach_hisp_und = "HispanicUndeclared",
    teach_black_female = "BlackFemale", teach_black_male = "BlackMale", teach_black_und = "BlackUndeclared",
    teach_api_female = "HawaiianPacificIslanderFemale", teach_api_male = "HawaiianPacificIslanderMale", teach_api_und = "HawaiianPacificIslanderUndeclared",
    teach_tr_female = "MultiFemale", teach_tr_male = "MultiMale", teach_tr_und = "MultiUndeclared",
    teach_new = "NewTeacher", AverageYearsofExperience, Experience1.5Years, Experience6.10Years, Experience11.15Years, Experience16.20Years, Experience21.25Years, Experience26.30Years, Experience31PlusYears, 
    ExperienceLessThanBA = "LessThanBA", ExperienceBA = "BA", ExperienceMA = "MA", ExperiencePhD = "PhD",
    AgeLessThan25, Age25.29, Age30.34, Age35.44, Age45.54, Age55andolder) %>% 
  mutate(
    across(starts_with("Experience"), floor),
    across(starts_with("Age"), floor),
    across(starts_with("teach"), floor)) %>% 
  # Merging with crosswalk to get the right format of nces school id
  left_join(mdex, by = "DTSCHID") %>% 
  mutate(leaid = as.character(leaid)) %>% 
  # There are many duplicate rows so we only want to keep one instance of each
  distinct()

# Creating dataset with mca level metrics from ecological dataset
tests <- ecol %>% 
  # Selecting and renaming variables
  select(
    year, leaid, DTSCHID,
    M3_testd, M3_L3M, M3_L4E, M3_L5E,
    R3_testd, R3_L3M, R3_L4E, R3_L5E,
    M7_testd, M7_L3M, M7_L4E, M7_L5E,
    R7_testd, R7_L3M, R7_L4E, R7_L5E,
    M11_testd, M11_L3M, M11_L4E, M11_L5E,
    R10_testd, R10_L3M, R10_L4E, R10_L5E
  ) %>% 
  pivot_longer(c(-DTSCHID, -year, -leaid), names_to = "test", values_to = "count") %>% 
  group_by(DTSCHID, leaid, year, test) %>% 
  summarise(
    tot = sum(count, na.rm = T)
  ) %>% 
  pivot_wider(names_from = "test", values_from = "tot") %>% 
  mutate(
    m3_tot_me = M3_L3M + M3_L4E + M3_L5E,
    r3_tot_me = R3_L3M + R3_L4E + R3_L5E,
    m7_tot_me = M7_L3M + M7_L4E + M7_L5E,
    r7_tot_me = R7_L3M + R7_L4E + R7_L5E,
    m11_tot_me = M11_L3M + M11_L4E + M11_L5E,
    r10_tot_me = R10_L3M + R10_L4E + R10_L5E,
    m3_perc_me = m3_tot_me / M3_testd,
    r3_perc_me = r3_tot_me / R3_testd,
    m7_perc_me = m7_tot_me / M7_testd,
    r7_perc_me = r7_tot_me / R7_testd,
    m11_perc_me = m11_tot_me / M11_testd,
    r10_perc_me = r10_tot_me / R10_testd,
    leaid = as.character(leaid)
  ) %>% 
  select(
    -m3_tot_me, -M3_testd, -M3_L3M, -M3_L4E, -M3_L5E,
    -r3_tot_me, -R3_testd, -R3_L3M, -R3_L4E, -R3_L5E,
    -m7_tot_me, -M7_testd, -M7_L3M, -M7_L4E, -M7_L5E,
    -r7_tot_me, -R7_testd, -R7_L3M, -R7_L4E, -R7_L5E,
    -m11_tot_me, -M11_testd, -M11_L3M, -M11_L4E, -M11_L5E,
    -r10_tot_me, -R10_testd, -R10_L3M, -R10_L4E, -R10_L5E
  ) %>% 
  # Merging with crosswalk to get the right format of nces school id
  left_join(mdex, by = "DTSCHID") %>% 
  mutate(leaid = as.character(leaid)) %>% 
  # There are many duplicate rows so we only want to keep one instance of each
  distinct() %>% 
  ungroup()

# Creating dataset with graduation level metrics from ecological dataset
grad.rates <- ecol %>% 
  # Selecting and renaming variables
  select(
    year, leaid, DTSCHID,
    perc_four_grad = "FourYearPercent_grad.", perc_four_drop = "FourYearPercent_drop."
  ) %>% 
  mutate(across(starts_with("perc"), ~./100)) %>% 
  # Merging with crosswalk to get the right format of nces school id
  left_join(mdex, by = "DTSCHID") %>% 
  mutate(leaid = as.character(leaid)) %>% 
  # There are many duplicate rows so we only want to keep one instance of each
  distinct()

# Merging teacher metrics into schools dataset
teach <- schools %>% 
  left_join(admin, by = c("leaid", "year")) %>% 
  left_join(pelsb, by = c("ncessch", "leaid", "year")) %>% 
  mutate(
    across(starts_with("teach_"), floor),
    across(starts_with("Experience"), floor),
  ) %>% 
  rowwise() %>% 
  mutate(
    teach_nam = teach_nam_female + teach_nam_male + teach_name_und,
    teach_hisp = teach_hisp_female + teach_hisp_male + teach_hisp_und,
    teach_black = teach_black_female + teach_black_male + teach_black_und,
    teach_api = teach_api_female + teach_api_male + teach_api_und,
    teach_asian = teach_asian_female + teach_asian_male + teach_asian_und,
    teach_tr = teach_tr_female + teach_tr_male + teach_tr_und,
    teach_bipoc = teach_nam + teach_hisp + teach_black + teach_api + teach_asian + teach_tr
  ) %>% 
  group_by(year, leaid) %>% 
  mutate(
    perc_rank_black = percent_rank(perblack),
    perc_rank_hisp = percent_rank(perhisp),
    perc_rank_frlunch = percent_rank(perflunch),
    q_black = case_when(perc_rank_black >= 0.75 ~ "Q1",
                        between(perc_rank_black, 0.5, 0.7499) ~ "Q2",
                        between(perc_rank_black, 0.25, 0.499) ~ "Q3",
                        perc_rank_black < 0.25 ~ "Q4"),
    q_hisp = case_when(perc_rank_hisp >= 0.75 ~ "Q1",
                       between(perc_rank_hisp, 0.5, 0.7499) ~ "Q2",
                       between(perc_rank_hisp, 0.25, 0.499) ~ "Q3",
                       perc_rank_hisp < 0.25 ~ "Q4"),
    q_frlunch = case_when(perc_rank_frlunch >= 0.75 ~ "Q1",
                          between(perc_rank_frlunch, 0.5, 0.7499) ~ "Q2",
                          between(perc_rank_frlunch, 0.25, 0.499) ~ "Q3",
                          perc_rank_frlunch < 0.25 ~ "Q4"),
    perc_nt = teach_new / teach_member,
    perc_exp15 = Experience1.5Years / teach_member,
    perc_nograd = (ExperienceLessThanBA + ExperienceBA) / teach_member,
    perc_u30 = (AgeLessThan25 + Age25.29) / teach_member,
    perc_a30 = (Age30.34 + Age35.44 + Age45.54 + Age55andolder) / teach_member,
  ) %>% 
  ungroup()

# Merging mca metrics into schools dataset
mca <- schools %>% 
  left_join(admin, by = c("leaid", "year")) %>% 
  left_join(tests, by = c("ncessch", "leaid", "year"))

# Merging graduation metrics into schools dataset
grad <- schools %>% 
  left_join(admin, by = c("leaid", "year")) %>% 
  left_join(grad.rates, by = c("ncessch", "leaid", "year"))

corrs <- left_join(teach, grad, by = c("ncessch", "year", "leaid")) %>% 
  left_join(mca, by = c("ncessch", "year", "leaid"))

```



```{r notes}
#| echo: false


  
# difference from the average % black, hispanic, of the district to the school
# 
# school perc black, deviation from mean (black, hispanic, white), normalized exposure black, hispanic, 

```


```{r level_corr_prep}
#| echo: false

elem <- corrs %>%
  filter(
    level=="Elementary/Primary",  
    member>=50, 
    year>=2001,
    leaname.x %in% metro.districts2) %>% 
  select(
    # ADMIN
    year, perblack = "perblack.x", perhisp = "perhisp.x", perwhite = "perwhite.x", perfrlunch = "perfrlunch.x", ns_wht_blk,
    # PELSB
    perc_nt, perc_exp15, perc_nograd, 
    # MCA
    m3_perc_me, r3_perc_me)

middl <- corrs %>%
  filter(
    level=="Middle", 
    member>=50, 
    year>=2001) %>% 
  select(
    # ADMIN
    year, perblack = "perblack.x", perhisp = "perhisp.x", perwhite = "perwhite.x", perfrlunch = "perfrlunch.x", ns_wht_blk,
    # PELSB
    perc_nt, perc_exp15, perc_nograd, 
    # MCA
    m7_perc_me, r7_perc_me)

high <- corrs %>%
  filter(
    level=="High/Secondary",  
    member>=50, 
    year>=2001) %>% 
  select(
    # ADMIN
    year, perblack = "perblack.x", perhisp = "perhisp.x", perwhite = "perwhite.x", perfrlunch = "perfrlunch.x", ns_wht_blk,
    # PESLB
    perc_nt, perc_exp15, perc_nograd, 
    # GRADUATION
    perc_four_grad, perc_four_drop,
    # MCA
    m11_perc_me, r10_perc_me)


```

# Ecological Data Variables
The reference table below will serve as the list of variables for the figures represented in correlation analysis. Please reference this table as needed to identify variables across those figures. 

```{r vars_table}
#| echo: false
#| label: fig-vars
#| fig-cap: Variable list for correlation matrices

corrs %>% 
  select(
    # ADMIN
    perblack = "perblack.x", perhisp = "perhisp.x", perwhite = "perwhite.x", perfrlunch = "perfrlunch.x", ns_wht_blk,
    # PESLB
    perc_nt, perc_exp15, perc_nograd, 
    # GRADUATION
    perc_four_grad, perc_four_drop,
    # MCA
    m3_perc_me, r3_perc_me, m7_perc_me, r7_perc_me, m11_perc_me, r10_perc_me) %>% 
  rename(
    "p_b" = "perblack",
    "p_h" = "perhisp",
    "p_wh" = "perwhite",
    "p_frl" = "perfrlunch",
    "wb_nei" = "ns_wht_blk",
    "p_nt" = "perc_nt",
    "p_nogr" = "perc_nograd",
    "p_me_m3" = "m3_perc_me",
    "p_me_r3" = "r3_perc_me",
    "p_me_m7" = "m7_perc_me",
    "p_me_r7" = "r7_perc_me",
    "p_me_m11" = "m11_perc_me",
    "p_me_r10" = "r10_perc_me",
    "p_exp15" = "perc_exp15",
    "p_4gr" = "perc_four_grad",
    "p_4dr" = "perc_four_drop",
  ) %>% 
  colnames() %>% 
  as.data.frame() %>% 
  rename(
    "variable" = "."
  ) %>% 
  mutate(
    description = case_when(
      variable=="p_b" ~ "Percent Black",
      variable=="p_h" ~ "Pecent Hispanic/Latin@",
      variable=="p_wh" ~ "Percent white",
      variable=="p_frl" ~ "Percent free/reduced lunch",
      variable=="wb_nei" ~ "White/Black Normalized Exposure Index",
      variable=="p_nt" ~ "Percent FTE's that are new teachers",
      variable=="p_nogr" ~ "Percent of FTE's with no graduate degree",
      variable=="p_exp15" ~ "Percent of FTE's with 1 to 5 years of experience",
      variable=="p_me_m3" ~ "Percent of students that meet or exceed 3rd grade MCA math scores",
      variable=="p_me_r3" ~ "Percent of students that meet or exceed 3rd grade MCA reading scores",
      variable=="p_me_m7" ~ "Percent of students that meet or exceed 7th grade MCA math scores",
      variable=="p_me_r7" ~ "Percent of students that meet or exceed 7th grade MCA reading scores",
      variable=="p_me_m11" ~ "Percent of students that meet or exceed 11th grade MCA math scores",
      variable=="p_me_r10" ~ "Percent of students that meet or exceed 10th grade MCA reading scores",
      variable=="p_4gr" ~ "Percent of students that graduate in four years??",
      variable=="p_4dr" ~ "Percent of students that drop out after four years??",
      TRUE ~ variable
    ),
    source = case_when(
      variable=="p_b" ~ "NCES",
      variable=="p_h" ~ "NCES",
      variable=="p_wh" ~ "NCES",
      variable=="p_frl" ~ "NCES",
      variable=="wb_nei" ~ "Stanford Education Opportunity",
      variable=="p_nt" ~ "PELSB",
      variable=="p_nogr" ~ "PELSB",
      variable=="p_exp15" ~ "PELSB",
      variable=="p_me_m3" ~ "MDE",
      variable=="p_me_r3" ~ "MDE",
      variable=="p_me_m7" ~ "MDE",
      variable=="p_me_r7" ~ "MDE",
      variable=="p_me_m11" ~ "MDE",
      variable=="p_me_r10" ~ "MDE",
      variable=="p_4gr" ~ "MDE",
      variable=="p_4dr" ~ "MDE",
      TRUE ~ variable
    )
  ) %>% 
  gt() %>% 
  tab_header(
    title = "Variable List and Source for Ecological Analysis, 2001-2022",
    subtitle = ""
  ) %>%
  opt_align_table_header(align = "center") %>%
  cols_align(
    align = c("center"),
    columns = everything()
  ) %>%
  cols_label(
    variable = "Variable",
    description = "Description",
    source = "Data Source",
  ) %>%
  tab_style(locations = cells_title("title"),
            style = cell_text(weight = 700)) %>%
  tab_style(locations = cells_title("subtitle"),
            style = cell_text(weight = 500)) %>%
  tab_style(style = list(cell_borders(sides = "top", color = "black", weight = px(0)), cell_text(transform = "uppercase", v_align = "bottom", size = px(14), weight = 500)),
            locations = gt::cells_column_labels(columns = gt::everything())) %>%
  tab_style(style = list(cell_text(transform = "uppercase", v_align = "bottom")),
            locations = gt::cells_body(columns = gt::everything())) %>%
  tab_style(style = cell_borders(sides = "bottom",
                                 color = "black",
                                 weight = px(1)),
            locations = cells_row_groups()) %>%
  tab_options(column_labels.background.color = "white",
              data_row.padding = px(3),
              heading.border.bottom.style = "none",
              table.border.top.width = px(3),
              table.border.top.style = "none",
              table.border.bottom.style = "none",
              column_labels.font.weight = "normal",
              column_labels.border.top.style = "none",
              column_labels.border.bottom.width = px(2),
              column_labels.border.bottom.color = "black",
              row_group.border.top.style = "none",
              row_group.border.top.color = "black",
              row_group.border.bottom.width = px(1),
              row_group.border.bottom.color = "white",
              stub.border.color = "white",
              stub.border.width = px(0),
              source_notes.font.size = 12,
              source_notes.border.lr.style = "none",
              table.font.size = 12)
  
```

# Distributions of Ecological Variables
The figures below are show the distribution of the variables used in the correlation matrices. Most of the annual distributions are similar and thus we only present the distributions for one year. They are stratified by level of school as not every variable is applicable to all levels (i.e. 3rd grade MCA scores only apply to elementary/primary schools). Only schools across the Twin Cities metro with at least 50 students are represented.


```{r distributions}
#| echo: false
#| fig-width: 12
#| fig-height: 8

corrs %>% 
  filter(
    member>=50, 
    year==2018,
    leaname.x %in% metro.districts2,
    level %in% c("Elementary/Primary", "Middle", "High/Secondary")) %>% 
  select(
    level,
    # ADMIN
    perblack = "perblack.x", perhisp = "perhisp.x", perwhite = "perwhite.x", perfrlunch = "perfrlunch.x", ns_wht_blk,
    # PESLB
    perc_nt, perc_exp15, perc_nograd, 
    # GRADUATION
    perc_four_grad, perc_four_drop,
    # MCA
    m3_perc_me, r3_perc_me, m7_perc_me, r7_perc_me, m11_perc_me, r10_perc_me) %>% 
  rename(
    "p_b" = "perblack",
    "p_h" = "perhisp",
    "p_wh" = "perwhite",
    "p_frl" = "perfrlunch",
    "wb_nei" = "ns_wht_blk",
    "p_nt" = "perc_nt",
    "p_nogr" = "perc_nograd",
    "p_me_m3" = "m3_perc_me",
    "p_me_r3" = "r3_perc_me",
    "p_me_m7" = "m7_perc_me",
    "p_me_r7" = "r7_perc_me",
    "p_me_m11" = "m11_perc_me",
    "p_me_r10" = "r10_perc_me",
    "p_exp15" = "perc_exp15",
    "p_4gr" = "perc_four_grad",
    "p_4dr" = "perc_four_drop",
  ) %>% 
  pivot_longer(-level, names_to = "type", values_to = "value") %>% 
  ggplot() +
  aes(x = value, fill = level) +
  geom_histogram(alpha = 0.7) +
  scale_fill_manual(values = c("#264653", "#c1121f", "#e9c46a", "#f4a261", "#A092B7FF", "#8AD9B1FF", "#a7c957",  "#778da9", "#780000")) +
  facet_wrap(~type) +
  labs(
    # Main title label
    title = "Distribution of Ecological Variables for Twin Cities Metro Schools, 2018",
    # Subtitle label
    subtitle = paste0("Stratified by <b style='color:#264653'>Elementary</b>, <b style='color:#e9c46a'>Middle</b>, and <b style='color:#c1121f'>High</b> Schools"),
    # X-axis label
    x = "",
    # Y-axis label
    y = "",
    # Caption label
    caption = "Sources: PELSB, MDE, NCES, Stanford Segregation",
    # Legend titles
  ) +
  theme(
    # Legend location, formatting, and background
    legend.position = "none",
    legend.title = element_text(
      family = "",
      face = "bold",
      size = 8,
      color = "black"
    ),
    # Legend background fill and outline (color)
    legend.background = element_blank(),
    # 
    legend.box.background = element_blank(),
    # Legend box for shapes
    legend.key = element_blank(),
    # Overall text formatting
    text = element_text(
      family = "",
      face = "bold",
      size = 12,
      color = "black"
    ),
    # Plot title formatting (margin t=top, b=bottom)
    plot.title = element_markdown(
      lineheight = 1.1,
      family = "",
      size = 16,
      face = "bold",
      hjust = 0.5,
      color = "black",
      margin = margin(
        t = 0.5, 
        unit = "cm")
    ),
    # Plot subtitle formatting
    plot.subtitle = element_markdown(
      family = "",
      size = 14,
      hjust = 0.5,
      face = "plain",
      color = "black"
    ),
    # Adjust facet labels
    strip.text = element_markdown(
      family = "",
      size = 10,
      hjust = 0.5,
      face = "plain",
      color = "black"
    ),
    # Plot caption formatting
    plot.caption = element_text(
      family = "",
      size = 10,
      face = "plain",
      color = "black"
    ),
    # Axes text angle and formatting
    axis.text.x = element_text(
      angle = 0,
      face = "bold"
    ),
    axis.text.y = element_text(
      angle = 0, 
      face = "bold"
    ),
    # Overall (x and y) axes ticks formatting
    axis.ticks = element_blank(),
    # Overall (x and y) axes lines formatting
    axis.line = element_line(
      color = "#b4aea9"
    ),
    # Panel grid formatting
    panel.grid = element_line(
      color = "grey95"
    ),
    # Minor overall (x and y) panel grid formatting
    panel.grid.minor = element_blank(
      
    ),
    # Major overall (x and y) panel grid formatting
    panel.grid.major = element_line(
      linetype = "solid"
    ),
    # Panel background (what is inside axes)
    panel.background = element_rect(
      fill = "#ffffff", 
      color = "#ffffff"
    ),
    # Plot background (what is outside axes)
    plot.background = element_rect(
      fill = "#ffffff", 
      color = "#ffffff"
    )
  )

```

# Cross-Sectional Correlation Matrices

## Elementary Schools

:::{.callout-note}
The correlation matrix below shows elementary schools in the Twin Cities metro area with at least 50 students. Some of the PELSB measures are not available in 2003 so they were removed from the analysis for those years.
:::

```{r elem_corr_prep}
#| echo: false

# Correlation Matrices

# el.01 <- elem %>% 
#   filter(year==2001) %>% 
#   select(-year, -perc_nograd, -perc_nt, -perc_exp15)
# 
# PerformanceAnalytics::chart.Correlation(el.01, histogram=TRUE, pch=19)

# el.11 <- elem %>% 
#   filter(year==2011) %>% 
#   select(-year)
# 
# PerformanceAnalytics::chart.Correlation(el.11, histogram=TRUE, pch=19)

# el.21 <- elem %>% 
#   filter(year==2021) %>% 
#   select(-year)
# 
# PerformanceAnalytics::chart.Correlation(el.21, histogram=TRUE, pch=19)

# elem.03 <- elem %>% 
#   filter(year==2003) %>% 
#   select(-year, -perc_nograd, -perc_nt, -perc_exp15) %>% 
#   rename(
#     "p_b" = "perblack",
#     "p_h" = "perhisp",
#     "p_wh" = "perwhite",
#     "p_frl" = "perfrlunch",
#     "wb_nei" = "ns_wht_blk",
#     "p_me_m3" = "m3_perc_me",
#     "p_me_r3" = "r3_perc_me",
#   ) %>% 
#   cor(use = "complete.obs") %>% 
#   reorder_cormat()
# 
# elem.11 <- elem %>% 
#   filter(year==2011) %>% 
#   select(-year) %>% 
#   rename(
#     "p_b" = "perblack",
#     "p_h" = "perhisp",
#     "p_wh" = "perwhite",
#     "p_frl" = "perfrlunch",
#     "wb_nei" = "ns_wht_blk",
#     "p_nt" = "perc_nt",
#     "p_nogr" = "perc_nograd",
#     "p_me_m3" = "m3_perc_me",
#     "p_me_r3" = "r3_perc_me",
#     "p_exp15" = "perc_exp15"
#   ) %>% 
#   cor(use = "complete.obs") %>% 
#   reorder_cormat()

elem.21 <- elem %>% 
  filter(year==2021) %>% 
  select(-year) %>% 
  rename(
    "p_b" = "perblack",
    "p_h" = "perhisp",
    "p_wh" = "perwhite",
    "p_frl" = "perfrlunch",
    "wb_nei" = "ns_wht_blk",
    "p_nt" = "perc_nt",
    "p_nogr" = "perc_nograd",
    "p_me_m3" = "m3_perc_me",
    "p_me_r3" = "r3_perc_me",
    "p_exp15" = "perc_exp15"
  ) %>% 
  cor(use = "complete.obs") %>% 
  reorder_cormat()

```


```{r elem_03}
#| echo: false
#| fig-width: 12
#| fig-height: 8

# elem.03 %>% 
#   melt(na.rm = T) %>% 
#   ggplot() +
#   aes(x = Var2, y = Var1, fill = value) +
#   geom_tile(color = "white") +
#   scale_fill_gradient2(
#     low = "#D43E4F",
#     mid = "#FDF7BE",
#     high = "#3288BE", 
#     midpoint = 0, 
#     limit = c(-1,1), 
#     name = "Pearson\nCorrelation") +
#   geom_text(aes(Var2, Var1, label = round(value, 2)), color = "black", size = 4) +
#   labs(
#     # Main title label
#     title = "Correlations Across Metro Elementary Schools, 2003",
#     # Subtitle label
#     subtitle = paste0(""),
#     # X-axis label
#     x = "",
#     # Y-axis label
#     y = "",
#     # Caption label
#     caption = "Sources: PELSB, MDE, NCES, Stanford Segregation",
#     # Legend titles
#   ) +
#   theme(
#     # Legend location, formatting, and background
#     legend.position = "right",
#     legend.title = element_text(
#       family = "",
#       face = "bold",
#       size = 8,
#       color = "black"
#     ),
#     # Legend background fill and outline (color)
#     legend.background = element_blank(),
#     # 
#     legend.box.background = element_blank(),
#     # Legend box for shapes
#     legend.key = element_blank(),
#     # Overall text formatting
#     text = element_text(
#       family = "",
#       face = "bold",
#       size = 12,
#       color = "black"
#     ),
#     # Plot title formatting (margin t=top, b=bottom)
#     plot.title = element_markdown(
#       lineheight = 1.1,
#       family = "",
#       size = 16,
#       face = "bold",
#       hjust = 0.5,
#       color = "black",
#       margin = margin(
#         t = 0.5, 
#         unit = "cm")
#     ),
#     # Plot subtitle formatting
#     plot.subtitle = element_markdown(
#       family = "",
#       size = 14,
#       hjust = 0.5,
#       face = "plain",
#       color = "black"
#     ),
#     # Adjust facet labels
#     strip.text = element_markdown(
#       family = "",
#       size = 10,
#       hjust = 0.5,
#       face = "plain",
#       color = "black"
#     ),
#     # Plot caption formatting
#     plot.caption = element_text(
#       family = "",
#       size = 10,
#       face = "plain",
#       color = "black"
#     ),
#     # Axes text angle and formatting
#     axis.text.x = element_text(
#       angle = 45,
#       vjust = 1,
#       hjust = 1,
#       face = "bold"
#     ),
#     axis.text.y = element_text(
#       angle = 0, 
#       face = "bold"
#     ),
#     # Overall (x and y) axes ticks formatting
#     axis.ticks = element_blank(),
#     # Overall (x and y) axes lines formatting
#     axis.line = element_line(
#       color = "#b4aea9"
#     ),
#     # Panel grid formatting
#     panel.grid = element_line(
#       color = "grey95"
#     ),
#     # Minor overall (x and y) panel grid formatting
#     panel.grid.minor = element_blank(
#       
#     ),
#     # Major overall (x and y) panel grid formatting
#     panel.grid.major = element_line(
#       linetype = "solid"
#     ),
#     # Panel background (what is inside axes)
#     panel.background = element_rect(
#       fill = "#ffffff", 
#       color = "#ffffff"
#     ),
#     # Plot background (what is outside axes)
#     plot.background = element_rect(
#       fill = "#ffffff", 
#       color = "#ffffff"
#     )
#   ) +
#   guides(fill = guide_colourbar(barwidth = 0.5,
#                                 barheight = 10)) +
#   coord_fixed()

```

```{r elem_11}
#| echo: false
#| fig-width: 12
#| fig-height: 8

# elem.11 %>% 
#   melt(na.rm = T) %>% 
#   ggplot() +
#   aes(x = Var2, y = Var1, fill = value) +
#   geom_tile(color = "white") +
#   scale_fill_gradient2(
#     low = "#D43E4F",
#     mid = "#FDF7BE",
#     high = "#3288BE",
#     midpoint = 0, 
#     limit = c(-1,1), 
#     name = "Pearson\nCorrelation") +
#   geom_text(aes(Var2, Var1, label = round(value, 2)), color = "black", size = 4) +
#   labs(
#     # Main title label
#     title = "Correlations Across Metro Elementary Schools, 2011",
#     # Subtitle label
#     subtitle = paste0(""),
#     # X-axis label
#     x = "",
#     # Y-axis label
#     y = "",
#     # Caption label
#     caption = "Sources: PELSB, MDE, NCES, Stanford Segregation",
#     # Legend titles
#   ) +
#   theme(
#     # Legend location, formatting, and background
#     legend.position = "right",
#     legend.title = element_text(
#       family = "",
#       face = "bold",
#       size = 8,
#       color = "black"
#     ),
#     # Legend background fill and outline (color)
#     legend.background = element_blank(),
#     # 
#     legend.box.background = element_blank(),
#     # Legend box for shapes
#     legend.key = element_blank(),
#     # Overall text formatting
#     text = element_text(
#       family = "",
#       face = "bold",
#       size = 12,
#       color = "black"
#     ),
#     # Plot title formatting (margin t=top, b=bottom)
#     plot.title = element_markdown(
#       lineheight = 1.1,
#       family = "",
#       size = 16,
#       face = "bold",
#       hjust = 0.5,
#       color = "black",
#       margin = margin(
#         t = 0.5, 
#         unit = "cm")
#     ),
#     # Plot subtitle formatting
#     plot.subtitle = element_markdown(
#       family = "",
#       size = 14,
#       hjust = 0.5,
#       face = "plain",
#       color = "black"
#     ),
#     # Adjust facet labels
#     strip.text = element_markdown(
#       family = "",
#       size = 10,
#       hjust = 0.5,
#       face = "plain",
#       color = "black"
#     ),
#     # Plot caption formatting
#     plot.caption = element_text(
#       family = "",
#       size = 10,
#       face = "plain",
#       color = "black"
#     ),
#     # Axes text angle and formatting
#     axis.text.x = element_text(
#       angle = 45,
#       vjust = 1,
#       hjust = 1,
#       face = "bold"
#     ),
#     axis.text.y = element_text(
#       angle = 0, 
#       face = "bold"
#     ),
#     # Overall (x and y) axes ticks formatting
#     axis.ticks = element_blank(),
#     # Overall (x and y) axes lines formatting
#     axis.line = element_line(
#       color = "#b4aea9"
#     ),
#     # Panel grid formatting
#     panel.grid = element_line(
#       color = "grey95"
#     ),
#     # Minor overall (x and y) panel grid formatting
#     panel.grid.minor = element_blank(
#       
#     ),
#     # Major overall (x and y) panel grid formatting
#     panel.grid.major = element_line(
#       linetype = "solid"
#     ),
#     # Panel background (what is inside axes)
#     panel.background = element_rect(
#       fill = "#ffffff", 
#       color = "#ffffff"
#     ),
#     # Plot background (what is outside axes)
#     plot.background = element_rect(
#       fill = "#ffffff", 
#       color = "#ffffff"
#     )
#   ) +
#   guides(fill = guide_colourbar(barwidth = 0.5,
#                                 barheight = 10)) +
#   coord_fixed()

```


```{r elem_21}
#| echo: false
#| fig-width: 12
#| fig-height: 8

elem.21 %>% 
  melt(na.rm = T) %>% 
  ggplot() +
  aes(x = Var2, y = Var1, fill = value) +
  geom_tile(color = "white") +
  scale_fill_gradient2(
    low = "#D43E4F",
    mid = "#FDF7BE",
    high = "#3288BE",
    midpoint = 0, 
    limit = c(-1,1), 
    name = "Pearson\nCorrelation") +
  geom_text(aes(Var2, Var1, label = round(value, 2)), color = "black", size = 4) +
  labs(
    # Main title label
    title = "Correlations Across Metro Elementary Schools, 2021",
    # Subtitle label
    subtitle = paste0(""),
    # X-axis label
    x = "",
    # Y-axis label
    y = "",
    # Caption label
    caption = "Sources: PELSB, MDE, NCES, Stanford Segregation",
    # Legend titles
  ) +
  theme(
    # Legend location, formatting, and background
    legend.position = "right",
    legend.title = element_text(
      family = "",
      face = "bold",
      size = 8,
      color = "black"
    ),
    # Legend background fill and outline (color)
    legend.background = element_blank(),
    # 
    legend.box.background = element_blank(),
    # Legend box for shapes
    legend.key = element_blank(),
    # Overall text formatting
    text = element_text(
      family = "",
      face = "bold",
      size = 12,
      color = "black"
    ),
    # Plot title formatting (margin t=top, b=bottom)
    plot.title = element_markdown(
      lineheight = 1.1,
      family = "",
      size = 16,
      face = "bold",
      hjust = 0.5,
      color = "black",
      margin = margin(
        t = 0.5, 
        unit = "cm")
    ),
    # Plot subtitle formatting
    plot.subtitle = element_markdown(
      family = "",
      size = 14,
      hjust = 0.5,
      face = "plain",
      color = "black"
    ),
    # Adjust facet labels
    strip.text = element_markdown(
      family = "",
      size = 10,
      hjust = 0.5,
      face = "plain",
      color = "black"
    ),
    # Plot caption formatting
    plot.caption = element_text(
      family = "",
      size = 10,
      face = "plain",
      color = "black"
    ),
    # Axes text angle and formatting
    axis.text.x = element_text(
      angle = 45,
      vjust = 1,
      hjust = 1,
      face = "bold"
    ),
    axis.text.y = element_text(
      angle = 0, 
      face = "bold"
    ),
    # Overall (x and y) axes ticks formatting
    axis.ticks = element_blank(),
    # Overall (x and y) axes lines formatting
    axis.line = element_line(
      color = "#b4aea9"
    ),
    # Panel grid formatting
    panel.grid = element_line(
      color = "grey95"
    ),
    # Minor overall (x and y) panel grid formatting
    panel.grid.minor = element_blank(
      
    ),
    # Major overall (x and y) panel grid formatting
    panel.grid.major = element_line(
      linetype = "solid"
    ),
    # Panel background (what is inside axes)
    panel.background = element_rect(
      fill = "#ffffff", 
      color = "#ffffff"
    ),
    # Plot background (what is outside axes)
    plot.background = element_rect(
      fill = "#ffffff", 
      color = "#ffffff"
    )
  ) +
  guides(fill = guide_colourbar(barwidth = 0.5,
                                barheight = 10)) +
  coord_fixed()


```

See @fig-vars for the list of variables.

We can also look at @fig-elemtim to see the trends over time.

## Middle Schools

:::{.callout-note}
The correlation matrix below shows middle schools in the Twin Cities metro area with at least 50 students. Some of the PELSB measures are not available in 2003 so they were removed from the analysis for those years. 
:::

```{r middl_corr_prep}
#| echo: false

# md.03 <- middl %>% 
#   filter(year==2003) %>% 
#   select(-year, -perc_nograd, -perc_nt, -perc_exp15)
# 
# PerformanceAnalytics::chart.Correlation(md.03, histogram=TRUE, pch=19)

# md.11 <- middl %>% 
#   filter(year==2011) %>% 
#   select(-year)
# 
# PerformanceAnalytics::chart.Correlation(md.11, histogram=TRUE, pch=19)

# md.21 <- middl %>% 
#   filter(year==2021) %>% 
#   select(-year)
# 
# PerformanceAnalytics::chart.Correlation(el.21, histogram=TRUE, pch=19)

# middl.03 <- middl %>% 
#   filter(year==2003) %>% 
#   select(-year, -perc_nograd, -perc_nt, -perc_exp15) %>% 
#   rename(
#     "p_b" = "perblack",
#     "p_h" = "perhisp",
#     "p_wh" = "perwhite",
#     "p_frl" = "perfrlunch",
#     "wb_nei" = "ns_wht_blk",
#     "p_me_m7" = "m7_perc_me",
#     "p_me_r7" = "r7_perc_me",
#   ) %>% 
#   cor(use = "complete.obs") %>% 
#   reorder_cormat()
# 
# middl.11 <- middl %>% 
#   filter(year==2011) %>% 
#   select(-year) %>% 
#   rename(
#     "p_b" = "perblack",
#     "p_h" = "perhisp",
#     "p_wh" = "perwhite",
#     "p_frl" = "perfrlunch",
#     "wb_nei" = "ns_wht_blk",
#     "p_nt" = "perc_nt",
#     "p_nogr" = "perc_nograd",
#     "p_me_m7" = "m7_perc_me",
#     "p_me_r7" = "r7_perc_me",
#     "p_exp15" = "perc_exp15"
#   ) %>% 
#   cor(use = "complete.obs") %>% 
#   reorder_cormat()

middl.21 <- middl %>% 
  filter(year==2021) %>% 
  select(-year) %>% 
  rename(
    "p_b" = "perblack",
    "p_h" = "perhisp",
    "p_wh" = "perwhite",
    "p_frl" = "perfrlunch",
    "wb_nei" = "ns_wht_blk",
    "p_nt" = "perc_nt",
    "p_nogr" = "perc_nograd",
    "p_me_m7" = "m7_perc_me",
    "p_me_r7" = "r7_perc_me",
    "p_exp15" = "perc_exp15"
  ) %>% 
  cor(use = "complete.obs") %>% 
  reorder_cormat()

```


```{r middl_03}
#| echo: false
#| fig-width: 12
#| fig-height: 8

# middl.03 %>% 
#   melt(na.rm = T) %>% 
#   ggplot() +
#   aes(x = Var2, y = Var1, fill = value) +
#   geom_tile(color = "white") +
#   scale_fill_gradient2(
#     low = "#D43E4F",
#     mid = "#FDF7BE",
#     high = "#3288BE",
#     midpoint = 0, 
#     limit = c(-1,1), 
#     name = "Pearson\nCorrelation") +
#   geom_text(aes(Var2, Var1, label = round(value, 2)), color = "black", size = 4) +
#   labs(
#     # Main title label
#     title = "Correlations Across Metro Middle Schools, 2003",
#     # Subtitle label
#     subtitle = paste0(""),
#     # X-axis label
#     x = "",
#     # Y-axis label
#     y = "",
#     # Caption label
#     caption = "Sources: PELSB, MDE, NCES, Stanford Segregation",
#     # Legend titles
#   ) +
#   theme(
#     # Legend location, formatting, and background
#     legend.position = "right",
#     legend.title = element_text(
#       family = "",
#       face = "bold",
#       size = 8,
#       color = "black"
#     ),
#     # Legend background fill and outline (color)
#     legend.background = element_blank(),
#     # 
#     legend.box.background = element_blank(),
#     # Legend box for shapes
#     legend.key = element_blank(),
#     # Overall text formatting
#     text = element_text(
#       family = "",
#       face = "bold",
#       size = 12,
#       color = "black"
#     ),
#     # Plot title formatting (margin t=top, b=bottom)
#     plot.title = element_markdown(
#       lineheight = 1.1,
#       family = "",
#       size = 16,
#       face = "bold",
#       hjust = 0.5,
#       color = "black",
#       margin = margin(
#         t = 0.5, 
#         unit = "cm")
#     ),
#     # Plot subtitle formatting
#     plot.subtitle = element_markdown(
#       family = "",
#       size = 14,
#       hjust = 0.5,
#       face = "plain",
#       color = "black"
#     ),
#     # Adjust facet labels
#     strip.text = element_markdown(
#       family = "",
#       size = 10,
#       hjust = 0.5,
#       face = "plain",
#       color = "black"
#     ),
#     # Plot caption formatting
#     plot.caption = element_text(
#       family = "",
#       size = 10,
#       face = "plain",
#       color = "black"
#     ),
#     # Axes text angle and formatting
#     axis.text.x = element_text(
#       angle = 45,
#       vjust = 1,
#       hjust = 1,
#       face = "bold"
#     ),
#     axis.text.y = element_text(
#       angle = 0, 
#       face = "bold"
#     ),
#     # Overall (x and y) axes ticks formatting
#     axis.ticks = element_blank(),
#     # Overall (x and y) axes lines formatting
#     axis.line = element_line(
#       color = "#b4aea9"
#     ),
#     # Panel grid formatting
#     panel.grid = element_line(
#       color = "grey95"
#     ),
#     # Minor overall (x and y) panel grid formatting
#     panel.grid.minor = element_blank(
#       
#     ),
#     # Major overall (x and y) panel grid formatting
#     panel.grid.major = element_line(
#       linetype = "solid"
#     ),
#     # Panel background (what is inside axes)
#     panel.background = element_rect(
#       fill = "#ffffff", 
#       color = "#ffffff"
#     ),
#     # Plot background (what is outside axes)
#     plot.background = element_rect(
#       fill = "#ffffff", 
#       color = "#ffffff"
#     )
#   ) +
#   guides(fill = guide_colourbar(barwidth = 0.5,
#                                 barheight = 10)) +
#   coord_fixed()

```

```{r middl_11}
#| echo: false
#| fig-width: 12
#| fig-height: 8

# middl.11 %>% 
#   melt(na.rm = T) %>% 
#   ggplot() +
#   aes(x = Var2, y = Var1, fill = value) +
#   geom_tile(color = "white") +
#   scale_fill_gradient2(
#     low = "#D43E4F",
#     mid = "#FDF7BE",
#     high = "#3288BE",
#     midpoint = 0, 
#     limit = c(-1,1), 
#     name = "Pearson\nCorrelation") +
#   geom_text(aes(Var2, Var1, label = round(value, 2)), color = "black", size = 4) +
#   labs(
#     # Main title label
#     title = "Correlations Across Metro Middle Schools, 2011",
#     # Subtitle label
#     subtitle = paste0(""),
#     # X-axis label
#     x = "",
#     # Y-axis label
#     y = "",
#     # Caption label
#     caption = "Sources: PELSB, MDE, NCES, Stanford Segregation",
#     # Legend titles
#   ) +
#   theme(
#     # Legend location, formatting, and background
#     legend.position = "right",
#     legend.title = element_text(
#       family = "",
#       face = "bold",
#       size = 8,
#       color = "black"
#     ),
#     # Legend background fill and outline (color)
#     legend.background = element_blank(),
#     # 
#     legend.box.background = element_blank(),
#     # Legend box for shapes
#     legend.key = element_blank(),
#     # Overall text formatting
#     text = element_text(
#       family = "",
#       face = "bold",
#       size = 12,
#       color = "black"
#     ),
#     # Plot title formatting (margin t=top, b=bottom)
#     plot.title = element_markdown(
#       lineheight = 1.1,
#       family = "",
#       size = 16,
#       face = "bold",
#       hjust = 0.5,
#       color = "black",
#       margin = margin(
#         t = 0.5, 
#         unit = "cm")
#     ),
#     # Plot subtitle formatting
#     plot.subtitle = element_markdown(
#       family = "",
#       size = 14,
#       hjust = 0.5,
#       face = "plain",
#       color = "black"
#     ),
#     # Adjust facet labels
#     strip.text = element_markdown(
#       family = "",
#       size = 10,
#       hjust = 0.5,
#       face = "plain",
#       color = "black"
#     ),
#     # Plot caption formatting
#     plot.caption = element_text(
#       family = "",
#       size = 10,
#       face = "plain",
#       color = "black"
#     ),
#     # Axes text angle and formatting
#     axis.text.x = element_text(
#       angle = 45,
#       vjust = 1,
#       hjust = 1,
#       face = "bold"
#     ),
#     axis.text.y = element_text(
#       angle = 0, 
#       face = "bold"
#     ),
#     # Overall (x and y) axes ticks formatting
#     axis.ticks = element_blank(),
#     # Overall (x and y) axes lines formatting
#     axis.line = element_line(
#       color = "#b4aea9"
#     ),
#     # Panel grid formatting
#     panel.grid = element_line(
#       color = "grey95"
#     ),
#     # Minor overall (x and y) panel grid formatting
#     panel.grid.minor = element_blank(
#       
#     ),
#     # Major overall (x and y) panel grid formatting
#     panel.grid.major = element_line(
#       linetype = "solid"
#     ),
#     # Panel background (what is inside axes)
#     panel.background = element_rect(
#       fill = "#ffffff", 
#       color = "#ffffff"
#     ),
#     # Plot background (what is outside axes)
#     plot.background = element_rect(
#       fill = "#ffffff", 
#       color = "#ffffff"
#     )
#   ) +
#   guides(fill = guide_colourbar(barwidth = 0.5,
#                                 barheight = 10)) +
#   coord_fixed()

```


```{r middl_21}
#| echo: false
#| fig-width: 12
#| fig-height: 8

middl.21 %>% 
  melt(na.rm = T) %>% 
  ggplot() +
  aes(x = Var2, y = Var1, fill = value) +
  geom_tile(color = "white") +
  scale_fill_gradient2(
    low = "#D43E4F",
    mid = "#FDF7BE",
    high = "#3288BE",
    midpoint = 0, 
    limit = c(-1,1), 
    name = "Pearson\nCorrelation") +
  geom_text(aes(Var2, Var1, label = round(value, 2)), color = "black", size = 4) +
  labs(
    # Main title label
    title = "Correlations Across Metro Middle Schools, 2021",
    # Subtitle label
    subtitle = paste0(""),
    # X-axis label
    x = "",
    # Y-axis label
    y = "",
    # Caption label
    caption = "Sources: PELSB, MDE, NCES, Stanford Segregation",
    # Legend titles
  ) +
  theme(
    # Legend location, formatting, and background
    legend.position = "right",
    legend.title = element_text(
      family = "",
      face = "bold",
      size = 8,
      color = "black"
    ),
    # Legend background fill and outline (color)
    legend.background = element_blank(),
    # 
    legend.box.background = element_blank(),
    # Legend box for shapes
    legend.key = element_blank(),
    # Overall text formatting
    text = element_text(
      family = "",
      face = "bold",
      size = 12,
      color = "black"
    ),
    # Plot title formatting (margin t=top, b=bottom)
    plot.title = element_markdown(
      lineheight = 1.1,
      family = "",
      size = 16,
      face = "bold",
      hjust = 0.5,
      color = "black",
      margin = margin(
        t = 0.5, 
        unit = "cm")
    ),
    # Plot subtitle formatting
    plot.subtitle = element_markdown(
      family = "",
      size = 14,
      hjust = 0.5,
      face = "plain",
      color = "black"
    ),
    # Adjust facet labels
    strip.text = element_markdown(
      family = "",
      size = 10,
      hjust = 0.5,
      face = "plain",
      color = "black"
    ),
    # Plot caption formatting
    plot.caption = element_text(
      family = "",
      size = 10,
      face = "plain",
      color = "black"
    ),
    # Axes text angle and formatting
    axis.text.x = element_text(
      angle = 45,
      vjust = 1,
      hjust = 1,
      face = "bold"
    ),
    axis.text.y = element_text(
      angle = 0, 
      face = "bold"
    ),
    # Overall (x and y) axes ticks formatting
    axis.ticks = element_blank(),
    # Overall (x and y) axes lines formatting
    axis.line = element_line(
      color = "#b4aea9"
    ),
    # Panel grid formatting
    panel.grid = element_line(
      color = "grey95"
    ),
    # Minor overall (x and y) panel grid formatting
    panel.grid.minor = element_blank(
      
    ),
    # Major overall (x and y) panel grid formatting
    panel.grid.major = element_line(
      linetype = "solid"
    ),
    # Panel background (what is inside axes)
    panel.background = element_rect(
      fill = "#ffffff", 
      color = "#ffffff"
    ),
    # Plot background (what is outside axes)
    plot.background = element_rect(
      fill = "#ffffff", 
      color = "#ffffff"
    )
  ) +
  guides(fill = guide_colourbar(barwidth = 0.5,
                                barheight = 10)) +
  coord_fixed()



```

See @fig-vars for the list of variables.

We can also look at @fig-middltim to see the trends over time.

## High Schools

:::{.callout-note}
The correlation matrix below shows high schools in the Twin Cities metro area with at least 50 students. Some of the PELSB measures are not available in 2003 so they were removed from the analysis for those years.
:::

```{r high_corr_prep}
#| echo: false

# Correlation Matrices

# hs.03 <- high %>% 
#   filter(year==2003) %>% 
#   select(-year, -perc_nograd, -perc_nt, -perc_exp15)
# 
# PerformanceAnalytics::chart.Correlation(hs.03, histogram=TRUE, pch=19)

# hs.11 <- high %>% 
#   filter(year==2011) %>% 
#   select(-year)
# 
# PerformanceAnalytics::chart.Correlation(hs.11, histogram=TRUE, pch=19)

# hs.21 <- high %>%
#   filter(year==2021) %>%
#   select(-year)
# 
# PerformanceAnalytics::chart.Correlation(hs.21, histogram=TRUE, pch=19)

# high.03 <- high %>% 
#   filter(year==2003) %>% 
#   select(-year, -perc_nograd, -perc_nt, -perc_exp15, -perc_four_grad, -perc_four_drop) %>% 
#   rename(
#     "p_b" = "perblack",
#     "p_h" = "perhisp",
#     "p_wh" = "perwhite",
#     "p_frl" = "perfrlunch",
#     "wb_nei" = "ns_wht_blk",
#     "p_me_m11" = "m11_perc_me",
#     "p_me_r10" = "r10_perc_me",
#   ) %>% 
#   cor(use = "complete.obs") %>% 
#   reorder_cormat()
# 
# high.11 <- high %>% 
#   filter(year==2011) %>% 
#   select(-year) %>% 
#   rename(
#     "p_b" = "perblack",
#     "p_h" = "perhisp",
#     "p_wh" = "perwhite",
#     "p_frl" = "perfrlunch",
#     "wb_nei" = "ns_wht_blk",
#     "p_nt" = "perc_nt",
#     "p_nogr" = "perc_nograd",
#     "p_me_m11" = "m11_perc_me",
#     "p_me_r10" = "r10_perc_me",
#     "p_4gr" = "perc_four_grad",
#     "p_4dr" = "perc_four_drop",
#     "p_exp15" = "perc_exp15"
#   ) %>% 
#   cor(use = "complete.obs") %>% 
#   reorder_cormat()

high.21 <- high %>% 
  filter(year==2021) %>% 
  select(-year) %>% 
  rename(
    "p_b" = "perblack",
    "p_h" = "perhisp",
    "p_wh" = "perwhite",
    "p_frl" = "perfrlunch",
    "wb_nei" = "ns_wht_blk",
    "p_nt" = "perc_nt",
    "p_nogr" = "perc_nograd",
    "p_me_m11" = "m11_perc_me",
    "p_me_r10" = "r10_perc_me",
    "p_4gr" = "perc_four_grad",
    "p_4dr" = "perc_four_drop",
    "p_exp15" = "perc_exp15"
  ) %>% 
  cor(use = "complete.obs") %>% 
  reorder_cormat()

```


```{r high_03}
#| echo: false
#| fig-width: 12
#| fig-height: 8

# high.03 %>% 
#   melt(na.rm = T) %>% 
#   ggplot() +
#   aes(x = Var2, y = Var1, fill = value) +
#   geom_tile(color = "white") +
#   scale_fill_gradient2(
#     low = "#D43E4F",
#     mid = "#FDF7BE",
#     high = "#3288BE",
#     midpoint = 0, 
#     limit = c(-1,1), 
#     name = "Pearson\nCorrelation") +
#   geom_text(aes(Var2, Var1, label = round(value, 2)), color = "black", size = 4) +
#   labs(
#     # Main title label
#     title = "Correlations Across Metro High Schools, 2003",
#     # Subtitle label
#     subtitle = paste0(""),
#     # X-axis label
#     x = "",
#     # Y-axis label
#     y = "",
#     # Caption label
#     caption = "Sources: PELSB, MDE, NCES, Stanford Segregation",
#     # Legend titles
#   ) +
#   theme(
#     # Legend location, formatting, and background
#     legend.position = "right",
#     legend.title = element_text(
#       family = "",
#       face = "bold",
#       size = 8,
#       color = "black"
#     ),
#     # Legend background fill and outline (color)
#     legend.background = element_blank(),
#     # 
#     legend.box.background = element_blank(),
#     # Legend box for shapes
#     legend.key = element_blank(),
#     # Overall text formatting
#     text = element_text(
#       family = "",
#       face = "bold",
#       size = 12,
#       color = "black"
#     ),
#     # Plot title formatting (margin t=top, b=bottom)
#     plot.title = element_markdown(
#       lineheight = 1.1,
#       family = "",
#       size = 16,
#       face = "bold",
#       hjust = 0.5,
#       color = "black",
#       margin = margin(
#         t = 0.5, 
#         unit = "cm")
#     ),
#     # Plot subtitle formatting
#     plot.subtitle = element_markdown(
#       family = "",
#       size = 14,
#       hjust = 0.5,
#       face = "plain",
#       color = "black"
#     ),
#     # Adjust facet labels
#     strip.text = element_markdown(
#       family = "",
#       size = 10,
#       hjust = 0.5,
#       face = "plain",
#       color = "black"
#     ),
#     # Plot caption formatting
#     plot.caption = element_text(
#       family = "",
#       size = 10,
#       face = "plain",
#       color = "black"
#     ),
#     # Axes text angle and formatting
#     axis.text.x = element_text(
#       angle = 45,
#       vjust = 1,
#       hjust = 1,
#       face = "bold"
#     ),
#     axis.text.y = element_text(
#       angle = 0, 
#       face = "bold"
#     ),
#     # Overall (x and y) axes ticks formatting
#     axis.ticks = element_blank(),
#     # Overall (x and y) axes lines formatting
#     axis.line = element_line(
#       color = "#b4aea9"
#     ),
#     # Panel grid formatting
#     panel.grid = element_line(
#       color = "grey95"
#     ),
#     # Minor overall (x and y) panel grid formatting
#     panel.grid.minor = element_blank(
#       
#     ),
#     # Major overall (x and y) panel grid formatting
#     panel.grid.major = element_line(
#       linetype = "solid"
#     ),
#     # Panel background (what is inside axes)
#     panel.background = element_rect(
#       fill = "#ffffff", 
#       color = "#ffffff"
#     ),
#     # Plot background (what is outside axes)
#     plot.background = element_rect(
#       fill = "#ffffff", 
#       color = "#ffffff"
#     )
#   ) +
#   guides(fill = guide_colourbar(barwidth = 0.5,
#                                 barheight = 10)) +
#   coord_fixed()

```

```{r high_11}
#| echo: false
#| fig-width: 12
#| fig-height: 8

# high.11 %>% 
#   melt(na.rm = T) %>% 
#   ggplot() +
#   aes(x = Var2, y = Var1, fill = value) +
#   geom_tile(color = "white") +
#   scale_fill_gradient2(
#     low = "#D43E4F",
#     mid = "#FDF7BE",
#     high = "#3288BE", 
#     midpoint = 0, 
#     limit = c(-1,1), 
#     name = "Pearson\nCorrelation") +
#   geom_text(aes(Var2, Var1, label = round(value, 2)), color = "black", size = 4) +
#   labs(
#     # Main title label
#     title = "Correlations Across Metro High Schools, 2011",
#     # Subtitle label
#     subtitle = paste0(""),
#     # X-axis label
#     x = "",
#     # Y-axis label
#     y = "",
#     # Caption label
#     caption = "Sources: PELSB, MDE, NCES, Stanford Segregation",
#     # Legend titles
#   ) +
#   theme(
#     # Legend location, formatting, and background
#     legend.position = "right",
#     legend.title = element_text(
#       family = "",
#       face = "bold",
#       size = 8,
#       color = "black"
#     ),
#     # Legend background fill and outline (color)
#     legend.background = element_blank(),
#     # 
#     legend.box.background = element_blank(),
#     # Legend box for shapes
#     legend.key = element_blank(),
#     # Overall text formatting
#     text = element_text(
#       family = "",
#       face = "bold",
#       size = 12,
#       color = "black"
#     ),
#     # Plot title formatting (margin t=top, b=bottom)
#     plot.title = element_markdown(
#       lineheight = 1.1,
#       family = "",
#       size = 16,
#       face = "bold",
#       hjust = 0.5,
#       color = "black",
#       margin = margin(
#         t = 0.5, 
#         unit = "cm")
#     ),
#     # Plot subtitle formatting
#     plot.subtitle = element_markdown(
#       family = "",
#       size = 14,
#       hjust = 0.5,
#       face = "plain",
#       color = "black"
#     ),
#     # Adjust facet labels
#     strip.text = element_markdown(
#       family = "",
#       size = 10,
#       hjust = 0.5,
#       face = "plain",
#       color = "black"
#     ),
#     # Plot caption formatting
#     plot.caption = element_text(
#       family = "",
#       size = 10,
#       face = "plain",
#       color = "black"
#     ),
#     # Axes text angle and formatting
#     axis.text.x = element_text(
#       angle = 45,
#       vjust = 1,
#       hjust = 1,
#       face = "bold"
#     ),
#     axis.text.y = element_text(
#       angle = 0, 
#       face = "bold"
#     ),
#     # Overall (x and y) axes ticks formatting
#     axis.ticks = element_blank(),
#     # Overall (x and y) axes lines formatting
#     axis.line = element_line(
#       color = "#b4aea9"
#     ),
#     # Panel grid formatting
#     panel.grid = element_line(
#       color = "grey95"
#     ),
#     # Minor overall (x and y) panel grid formatting
#     panel.grid.minor = element_blank(
#       
#     ),
#     # Major overall (x and y) panel grid formatting
#     panel.grid.major = element_line(
#       linetype = "solid"
#     ),
#     # Panel background (what is inside axes)
#     panel.background = element_rect(
#       fill = "#ffffff", 
#       color = "#ffffff"
#     ),
#     # Plot background (what is outside axes)
#     plot.background = element_rect(
#       fill = "#ffffff", 
#       color = "#ffffff"
#     )
#   ) +
#   guides(fill = guide_colourbar(barwidth = 0.5,
#                                 barheight = 10)) +
#   coord_fixed()

```


```{r high_21}
#| echo: false
#| fig-width: 12
#| fig-height: 8

high.21 %>% 
  melt(na.rm = T) %>% 
  ggplot() +
  aes(x = Var2, y = Var1, fill = value) +
  geom_tile(color = "white") +
  scale_fill_gradient2(
    low = "#D43E4F",
    mid = "#FDF7BE",
    high = "#3288BE",
    midpoint = 0, 
    limit = c(-1,1), 
    name = "Pearson\nCorrelation") +
  geom_text(aes(Var2, Var1, label = round(value, 2)), color = "black", size = 4) +
  labs(
    # Main title label
    title = "Correlations Across Metro High Schools, 2021",
    # Subtitle label
    subtitle = paste0(""),
    # X-axis label
    x = "",
    # Y-axis label
    y = "",
    # Caption label
    caption = "Sources: PELSB, MDE, NCES, Stanford Segregation",
    # Legend titles
  ) +
  theme(
    # Legend location, formatting, and background
    legend.position = "right",
    legend.title = element_text(
      family = "",
      face = "bold",
      size = 8,
      color = "black"
    ),
    # Legend background fill and outline (color)
    legend.background = element_blank(),
    # 
    legend.box.background = element_blank(),
    # Legend box for shapes
    legend.key = element_blank(),
    # Overall text formatting
    text = element_text(
      family = "",
      face = "bold",
      size = 12,
      color = "black"
    ),
    # Plot title formatting (margin t=top, b=bottom)
    plot.title = element_markdown(
      lineheight = 1.1,
      family = "",
      size = 16,
      face = "bold",
      hjust = 0.5,
      color = "black",
      margin = margin(
        t = 0.5, 
        unit = "cm")
    ),
    # Plot subtitle formatting
    plot.subtitle = element_markdown(
      family = "",
      size = 14,
      hjust = 0.5,
      face = "plain",
      color = "black"
    ),
    # Adjust facet labels
    strip.text = element_markdown(
      family = "",
      size = 10,
      hjust = 0.5,
      face = "plain",
      color = "black"
    ),
    # Plot caption formatting
    plot.caption = element_text(
      family = "",
      size = 10,
      face = "plain",
      color = "black"
    ),
    # Axes text angle and formatting
    axis.text.x = element_text(
      angle = 45,
      vjust = 1,
      hjust = 1,
      face = "bold"
    ),
    axis.text.y = element_text(
      angle = 0, 
      face = "bold"
    ),
    # Overall (x and y) axes ticks formatting
    axis.ticks = element_blank(),
    # Overall (x and y) axes lines formatting
    axis.line = element_line(
      color = "#b4aea9"
    ),
    # Panel grid formatting
    panel.grid = element_line(
      color = "grey95"
    ),
    # Minor overall (x and y) panel grid formatting
    panel.grid.minor = element_blank(
      
    ),
    # Major overall (x and y) panel grid formatting
    panel.grid.major = element_line(
      linetype = "solid"
    ),
    # Panel background (what is inside axes)
    panel.background = element_rect(
      fill = "#ffffff", 
      color = "#ffffff"
    ),
    # Plot background (what is outside axes)
    plot.background = element_rect(
      fill = "#ffffff", 
      color = "#ffffff"
    )
  ) +
  guides(fill = guide_colourbar(barwidth = 0.5,
                                barheight = 13)) +
  coord_fixed()


```

See @fig-vars for the list of variables.

We can also look at @fig-hightim to see the trends over time.

# Correlations Over Time

```{r corr_time_prep}
#| echo: false

elem_corrs <- elem_corrs_fun(elem, years = 2001:2021)
middl_corrs <- middl_corrs_fun(middl, years = 2001:2021) 
high_corrs <- high_corrs_fun(high, years = 2001:2021)


```

## Elementary Schools

:::{.callout-note}
The figure below represents the pearson correlation coefficient between the faceted variable (i.e. the variable at the top of each chart) and the variable for each colored line. Every variable is not available across all years.
:::

```{r elem_corr_time_plot}
#| echo: false
#| fig-width: 12
#| fig-height: 8
#| fig-cap: Correlations over time for TC Metro Elementary Schools, 2001-2022
#| label: fig-elemtim

elem_corrs %>% 
  filter(Var1 %in% c("wb_nei", "p_b", "p_h")) %>% 
  ggplot() +
  aes(x = year, y = value, color = Var2) +
  geom_line(linewidth = 1) +
  facet_wrap(~Var1) +
  scale_color_manual(values = c("#264653", "#2a9d8f", "#e9c46a", "#f4a261", "#A092B7FF", "#8AD9B1FF", "#a7c957",  "#778da9", "#780000", "#c1121f")) +
  labs(
    # Main title label
    title = "Correlations Between Variables, 2001-2021",
    # Subtitle label
    subtitle = paste0("Across Metro Elementary Schools"),
    # X-axis label
    x = "Fall of School Year",
    # Y-axis label
    y = "Pearson Correlation Coefficient",
    # Caption label
    caption = "Sources: PELSB, MDE, NCES, Stanford Segregation",
    # Legend titles
  ) +
  theme(
    # Legend location, formatting, and background
    legend.position = "bottom",
    legend.title = element_blank(),
    # Legend background fill and outline (color)
    legend.background = element_blank(),
    # 
    legend.box.background = element_blank(),
    # Legend box for shapes
    legend.key = element_blank(),
    # Overall text formatting
    text = element_text(
      family = "",
      face = "bold",
      size = 12,
      color = "black"
    ),
    # Plot title formatting (margin t=top, b=bottom)
    plot.title = element_markdown(
      lineheight = 1.1,
      family = "",
      size = 16,
      face = "bold",
      hjust = 0.5,
      color = "black",
      margin = margin(
        t = 0.5, 
        unit = "cm")
    ),
    # Plot subtitle formatting
    plot.subtitle = element_markdown(
      family = "",
      size = 14,
      hjust = 0.5,
      face = "plain",
      color = "black"
    ),
    # Adjust facet labels
    strip.text = element_markdown(
      family = "",
      size = 10,
      hjust = 0.5,
      face = "plain",
      color = "black"
    ),
    # Plot caption formatting
    plot.caption = element_text(
      family = "",
      size = 10,
      face = "plain",
      color = "black"
    ),
    # Axes text angle and formatting
    axis.text.x = element_text(
      angle = 0,
      face = "bold"
    ),
    axis.text.y = element_text(
      angle = 0, 
      face = "bold"
    ),
    # Overall (x and y) axes ticks formatting
    axis.ticks = element_blank(),
    # Overall (x and y) axes lines formatting
    axis.line = element_line(
      color = "#b4aea9"
    ),
    # Panel grid formatting
    panel.grid = element_line(
      color = "grey95"
    ),
    # Minor overall (x and y) panel grid formatting
    panel.grid.minor = element_blank(
      
    ),
    # Major overall (x and y) panel grid formatting
    panel.grid.major = element_line(
      linetype = "solid"
    ),
    # Panel background (what is inside axes)
    panel.background = element_rect(
      fill = "#ffffff", 
      color = "#ffffff"
    ),
    # Plot background (what is outside axes)
    plot.background = element_rect(
      fill = "#ffffff", 
      color = "#ffffff"
    )
  ) +
  guides(color = guide_legend(nrow = 2, byrow = TRUE))


```
## Middle Schools

:::{.callout-note}
The figure below represents the pearson correlation coefficient between the faceted variable (i.e. the variable at the top of each chart) and the variable for each colored line. Every variable is not available across all years.
:::

```{r middl_corr_time_plot}
#| echo: false
#| fig-width: 12
#| fig-height: 8
#| label: fig-middltim
#| fig-cap: Correlations over time for TC Metro Middle Schools, 2001-2022

middl_corrs %>% 
  filter(Var1 %in% c("wb_nei", "p_b", "p_h")) %>% 
  ggplot() +
  aes(x = year, y = value, color = Var2) +
  geom_line(linewidth = 1) +
  facet_wrap(~Var1) +
  scale_color_manual(values = c("#264653", "#2a9d8f", "#e9c46a", "#f4a261", "#A092B7FF", "#8AD9B1FF", "#a7c957",  "#778da9", "#780000", "#c1121f")) +
  labs(
    # Main title label
    title = "Correlations Between Variables, 2001-2021",
    # Subtitle label
    subtitle = paste0("Across Metro Middle Schools"),
    # X-axis label
    x = "Fall of School Year",
    # Y-axis label
    y = "Pearson Correlation Coefficient",
    # Caption label
    caption = "Sources: PELSB, MDE, NCES, Stanford Segregation",
    # Legend titles
  ) +
  theme(
    # Legend location, formatting, and background
    legend.position = "bottom",
    legend.title = element_blank(),
    # Legend background fill and outline (color)
    legend.background = element_blank(),
    # 
    legend.box.background = element_blank(),
    # Legend box for shapes
    legend.key = element_blank(),
    # Overall text formatting
    text = element_text(
      family = "",
      face = "bold",
      size = 12,
      color = "black"
    ),
    # Plot title formatting (margin t=top, b=bottom)
    plot.title = element_markdown(
      lineheight = 1.1,
      family = "",
      size = 16,
      face = "bold",
      hjust = 0.5,
      color = "black",
      margin = margin(
        t = 0.5, 
        unit = "cm")
    ),
    # Plot subtitle formatting
    plot.subtitle = element_markdown(
      family = "",
      size = 14,
      hjust = 0.5,
      face = "plain",
      color = "black"
    ),
    # Adjust facet labels
    strip.text = element_markdown(
      family = "",
      size = 10,
      hjust = 0.5,
      face = "plain",
      color = "black"
    ),
    # Plot caption formatting
    plot.caption = element_text(
      family = "",
      size = 10,
      face = "plain",
      color = "black"
    ),
    # Axes text angle and formatting
    axis.text.x = element_text(
      angle = 0,
      face = "bold"
    ),
    axis.text.y = element_text(
      angle = 0, 
      face = "bold"
    ),
    # Overall (x and y) axes ticks formatting
    axis.ticks = element_blank(),
    # Overall (x and y) axes lines formatting
    axis.line = element_line(
      color = "#b4aea9"
    ),
    # Panel grid formatting
    panel.grid = element_line(
      color = "grey95"
    ),
    # Minor overall (x and y) panel grid formatting
    panel.grid.minor = element_blank(
      
    ),
    # Major overall (x and y) panel grid formatting
    panel.grid.major = element_line(
      linetype = "solid"
    ),
    # Panel background (what is inside axes)
    panel.background = element_rect(
      fill = "#ffffff", 
      color = "#ffffff"
    ),
    # Plot background (what is outside axes)
    plot.background = element_rect(
      fill = "#ffffff", 
      color = "#ffffff"
    )
  ) +
  guides(color = guide_legend(nrow = 2, byrow = TRUE))


```

## High Schools

:::{.callout-note}
The figure below represents the pearson correlation coefficient between the faceted variable (i.e. the variable at the top of each chart) and the variable for each colored line. Every variable is not available across all years.
:::

```{r high_corr_time_plot}
#| echo: false
#| fig-width: 12
#| fig-height: 8
#| label: fig-hightim
#| fig-cap: Correlations over time for TC Metro High Schools, 2001-2022

high_corrs %>% 
  filter(Var1 %in% c("wb_nei", "p_b", "p_h")) %>% 
  ggplot() +
  aes(x = year, y = value, color = Var2) +
  geom_line(linewidth = 1) +
  facet_wrap(~Var1) +
  scale_color_manual(values = c("#264653", "#2a9d8f", "#e9c46a", "#f4a261", "#A092B7FF", "#8AD9B1FF", "#a7c957",  "#778da9", "#780000", "#c1121f", "#B93289FF", "#C86C7CFF")) +
  labs(
    # Main title label
    title = "Correlations Between Variables, 2001-2021",
    # Subtitle label
    subtitle = paste0("Across Metro High Schools"),
    # X-axis label
    x = "Fall of School Year",
    # Y-axis label
    y = "Pearson Correlation Coefficient",
    # Caption label
    caption = "Sources: PELSB, MDE, NCES, Stanford Segregation",
    # Legend titles
  ) +
  theme(
    # Legend location, formatting, and background
    legend.position = "bottom",
    legend.title = element_blank(),
    # Legend background fill and outline (color)
    legend.background = element_blank(),
    # 
    legend.box.background = element_blank(),
    # Legend box for shapes
    legend.key = element_blank(),
    # Overall text formatting
    text = element_text(
      family = "",
      face = "bold",
      size = 12,
      color = "black"
    ),
    # Plot title formatting (margin t=top, b=bottom)
    plot.title = element_markdown(
      lineheight = 1.1,
      family = "",
      size = 16,
      face = "bold",
      hjust = 0.5,
      color = "black",
      margin = margin(
        t = 0.5, 
        unit = "cm")
    ),
    # Plot subtitle formatting
    plot.subtitle = element_markdown(
      family = "",
      size = 14,
      hjust = 0.5,
      face = "plain",
      color = "black"
    ),
    # Adjust facet labels
    strip.text = element_markdown(
      family = "",
      size = 10,
      hjust = 0.5,
      face = "plain",
      color = "black"
    ),
    # Plot caption formatting
    plot.caption = element_text(
      family = "",
      size = 10,
      face = "plain",
      color = "black"
    ),
    # Axes text angle and formatting
    axis.text.x = element_text(
      angle = 0,
      face = "bold"
    ),
    axis.text.y = element_text(
      angle = 0, 
      face = "bold"
    ),
    # Overall (x and y) axes ticks formatting
    axis.ticks = element_blank(),
    # Overall (x and y) axes lines formatting
    axis.line = element_line(
      color = "#b4aea9"
    ),
    # Panel grid formatting
    panel.grid = element_line(
      color = "grey95"
    ),
    # Minor overall (x and y) panel grid formatting
    panel.grid.minor = element_blank(
      
    ),
    # Major overall (x and y) panel grid formatting
    panel.grid.major = element_line(
      linetype = "solid"
    ),
    # Panel background (what is inside axes)
    panel.background = element_rect(
      fill = "#ffffff", 
      color = "#ffffff"
    ),
    # Plot background (what is outside axes)
    plot.background = element_rect(
      fill = "#ffffff", 
      color = "#ffffff"
    )
  ) +
  guides(color = guide_legend(nrow = 2, byrow = TRUE))



```



In 2022, the typical (measured as a mean) Black child goes to a school that has X% free reduced lunch, and Y years of average teacher experience. In contrast, the typical white child goes to a school that has X% free reduced lunch, and Y years of average teacher experience.

How do you conceptualize "typical"? Did you just take the population weighted mean?

Do more segregated schools have teachers with less experience or education?

```{r}



```

MCA/Testing


